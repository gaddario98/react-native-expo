{"version":3,"file":"index.mjs","sources":["../../hooks/useExpoNotifications.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport * as Device from \"expo-device\";\nimport * as Notifications from \"expo-notifications\";\nimport { Platform } from \"react-native\";\n\ntype NotificationPermissionStatus = \"granted\" | \"denied\" | \"undetermined\";\n\nexport interface UseNotificationsReturn {\n  expoPushToken: string;\n  permissionStatus: NotificationPermissionStatus | null;\n  initializeNotifications: (id: string) => Promise<void>;\n  sendLocalNotification: (\n    title: string,\n    body: string,\n    data?: Record<string, unknown>\n  ) => Promise<void>;\n}\n\n// Configurazione handler notifiche - spostato fuori dal componente per evitare reinizializzazioni\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\ninterface Props {\n  updateToken: (token: string) => Promise<void>;\n  setNotification: (notification: Notifications.Notification) => void;\n}\n\nexport const useExpoNotifications = ({\n  updateToken,\n  setNotification,\n}: Props): UseNotificationsReturn => {\n  const [expoPushToken, setExpoPushToken] = useState<string>(\"\");\n  const [permissionStatus, setPermissionStatus] =\n    useState<NotificationPermissionStatus | null>(null);\n\n  // Memoizzazione della funzione di registrazione\n  const registerForPushNotificationsAsync = useCallback(async (): Promise<\n    string | undefined\n  > => {\n    if (Platform.OS === \"android\") {\n      await Notifications.setNotificationChannelAsync(\"default\", {\n        name: \"default\",\n        importance: Notifications.AndroidImportance.MAX,\n        vibrationPattern: [0, 250, 250, 250],\n        lightColor: \"#FF231F7C\",\n      });\n    }\n\n    if (!Device.isDevice) {\n      return undefined;\n    }\n\n    const { status: existingStatus } =\n      await Notifications.getPermissionsAsync();\n    const finalStatus =\n      existingStatus !== \"granted\"\n        ? (await Notifications.requestPermissionsAsync()).status\n        : existingStatus;\n\n    setPermissionStatus(finalStatus as NotificationPermissionStatus);\n\n    if (finalStatus !== \"granted\") {\n      return undefined;\n    }\n\n    const { data: token } = await Notifications.getExpoPushTokenAsync({\n      projectId: process.env.EXPO_PUBLIC_EAS_PROJECT_ID,\n    });\n\n    return token;\n  }, []);\n\n  // Memoizzazione della funzione di salvataggio token\n  const saveTokenToFirestore = useCallback(\n    async (token: string): Promise<void> => {\n      try {\n        await updateToken(token);\n      } catch (error) {\n        throw new Error(\"Failed to save token to Firestore \" + error);\n      }\n    },\n    [updateToken]\n  );\n\n  // Memoizzazione della funzione di inizializzazione\n  const initializeNotifications = useCallback(\n    async (id: string): Promise<void> => {\n      if (Platform.OS === \"web\") return;\n      try {\n        //  if (getAuth()?.currentuser?.Id) return;\n        const token = await registerForPushNotificationsAsync();\n        if (token) {\n          setExpoPushToken(token);\n          await saveTokenToFirestore(token);\n        }\n      } catch (error) {\n        throw new Error(\"Failed to initialize notifications: \" + error);\n      }\n    },\n    [registerForPushNotificationsAsync, saveTokenToFirestore]\n  );\n\n  // Memoizzazione della funzione di invio notifica locale\n  const sendLocalNotification = useCallback(\n    async (\n      title: string,\n      body: string,\n      data: Record<string, unknown> = {}\n    ): Promise<void> => {\n      try {\n        await Notifications.scheduleNotificationAsync({\n          content: { title, body, data },\n          trigger: null,\n        });\n      } catch (error) {\n        throw new Error(\"Error sending local notification: \" + error);\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    const notificationListener =\n      Notifications.addNotificationReceivedListener(setNotification);\n\n    const responseListener =\n      Notifications.addNotificationResponseReceivedListener(\n        (_: Notifications.NotificationResponse) => {\n          //\n        }\n      );\n\n    // Cleanup function\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n  }, [setNotification]);\n\n  return {\n    expoPushToken,\n    permissionStatus,\n    initializeNotifications,\n    sendLocalNotification,\n  };\n};\n"],"names":[],"mappings":"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"}